function
variable
constant
loop
array
pointer
The
the
matrix
Matrix
Addition
add
sum
Sum
subtract
Subtract
printf
scanf
return
int
float
char
double
void
include <>
stdio.h
conio.h
stdlib.h
math.h
for (; ;){}
while() {}
if() {}
else
switch
case
break
continue
cout<<
cin>>
endl
namespace
std
iostream
using
string
vector
map
set
unordered_map
for
while
if
else
switch
case
break
continue
return
class
public
private
protected
virtual
override
template
lambda
System.out.println();
out
println
print
main () {}
public
static
void
String
int
float
double
boolean
char
new
class
interface
extends
implements
import
package
return
for
while
if
else
switch
case
break
continue
try
catch
finally
throw
throws
num
count
sum
total
value
index
result
average
temp
flag
input
output
data
status
length
width
height
size
weight
distance
speed
time
date
price
amount
id
name
username
password
email
phone
address
score
grade
marks
percentage
message
option
choice
mode
state
level
position
direction
x
y
z
row
column
matrix
list
array
stack
queue
map
node
edge
vertex
get
set
update
delete
remove
find
search
compute
calculate
process
sort
print
display
show
hide
validate
check
convert
parse
read
write
save
load
i
j
k
n
m
x
y
z
counter
index
pos
iter
node
ptr
Array
elements
Elements
element
element
sizeof
capacity
insertion
insert
success
failed
fail
good 
excellent
Paper
initial
delete
deletion
Deletion
many
Scanner
January
February
March
April
May 
June
July
August
September
do {} while();
October
November
December
public calss   {}
public static void main(String[] args){ }
import java.util.Scanner;
try(Scanner scan = new Scanner(System.in)){ }
nextLine();
nextInt();
nextFloat();
nextDouble();
nextBoolean();
charAt()
concat()
substring()
substring(, )
replace(,)
replaceAll(, )
replaceFirst(, )
toUpperCase()
toLowerCase()
trim()
strip()
stripLeading()
stripTrailing()
intern()
equals()

equalsIgnoreCase()

compareTo()

compareToIgnoreCase()

contentEquals()
contains()

startsWith()

startsWith(,)

endsWith()

indexOf()

indexOf(, )

indexOf()

indexOf(, )

lastIndexOf()

lastIndexOf(, )

lastIndexOf()

lastIndexOf(, )

toCharArray()

getBytes()

length()

isEmpty()

isBlank()
abstract class { }
class   extends { }



